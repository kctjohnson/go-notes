// Code generated by github.com/Khan/genqlient, DO NOT EDIT.

package graphql

import (
	"context"
	"time"

	"github.com/Khan/genqlient/graphql"
)

// CreateNoteCreateNote includes the requested fields of the GraphQL type Note.
type CreateNoteCreateNote struct {
	Id               int64     `json:"id"`
	Title            string    `json:"title"`
	Content          string    `json:"content"`
	Created_date     time.Time `json:"created_date"`
	Last_edited_date time.Time `json:"last_edited_date"`
	Tag_id           *int64    `json:"tag_id"`
}

// GetId returns CreateNoteCreateNote.Id, and is useful for accessing the field via an interface.
func (v *CreateNoteCreateNote) GetId() int64 { return v.Id }

// GetTitle returns CreateNoteCreateNote.Title, and is useful for accessing the field via an interface.
func (v *CreateNoteCreateNote) GetTitle() string { return v.Title }

// GetContent returns CreateNoteCreateNote.Content, and is useful for accessing the field via an interface.
func (v *CreateNoteCreateNote) GetContent() string { return v.Content }

// GetCreated_date returns CreateNoteCreateNote.Created_date, and is useful for accessing the field via an interface.
func (v *CreateNoteCreateNote) GetCreated_date() time.Time { return v.Created_date }

// GetLast_edited_date returns CreateNoteCreateNote.Last_edited_date, and is useful for accessing the field via an interface.
func (v *CreateNoteCreateNote) GetLast_edited_date() time.Time { return v.Last_edited_date }

// GetTag_id returns CreateNoteCreateNote.Tag_id, and is useful for accessing the field via an interface.
func (v *CreateNoteCreateNote) GetTag_id() *int64 { return v.Tag_id }

// CreateNoteResponse is returned by CreateNote on success.
type CreateNoteResponse struct {
	CreateNote CreateNoteCreateNote `json:"CreateNote"`
}

// GetCreateNote returns CreateNoteResponse.CreateNote, and is useful for accessing the field via an interface.
func (v *CreateNoteResponse) GetCreateNote() CreateNoteCreateNote { return v.CreateNote }

// CreateTagCreateTag includes the requested fields of the GraphQL type Tag.
type CreateTagCreateTag struct {
	Id   int64  `json:"id"`
	Name string `json:"name"`
}

// GetId returns CreateTagCreateTag.Id, and is useful for accessing the field via an interface.
func (v *CreateTagCreateTag) GetId() int64 { return v.Id }

// GetName returns CreateTagCreateTag.Name, and is useful for accessing the field via an interface.
func (v *CreateTagCreateTag) GetName() string { return v.Name }

// CreateTagResponse is returned by CreateTag on success.
type CreateTagResponse struct {
	CreateTag CreateTagCreateTag `json:"CreateTag"`
}

// GetCreateTag returns CreateTagResponse.CreateTag, and is useful for accessing the field via an interface.
func (v *CreateTagResponse) GetCreateTag() CreateTagCreateTag { return v.CreateTag }

// DeleteNoteResponse is returned by DeleteNote on success.
type DeleteNoteResponse struct {
	DeleteNote bool `json:"DeleteNote"`
}

// GetDeleteNote returns DeleteNoteResponse.DeleteNote, and is useful for accessing the field via an interface.
func (v *DeleteNoteResponse) GetDeleteNote() bool { return v.DeleteNote }

// DeleteTagResponse is returned by DeleteTag on success.
type DeleteTagResponse struct {
	DeleteTag bool `json:"DeleteTag"`
}

// GetDeleteTag returns DeleteTagResponse.DeleteTag, and is useful for accessing the field via an interface.
func (v *DeleteTagResponse) GetDeleteTag() bool { return v.DeleteTag }

// GetNoteNote includes the requested fields of the GraphQL type Note.
type GetNoteNote struct {
	Id               int64     `json:"id"`
	Title            string    `json:"title"`
	Content          string    `json:"content"`
	Created_date     time.Time `json:"created_date"`
	Last_edited_date time.Time `json:"last_edited_date"`
	Tag_id           *int64    `json:"tag_id"`
}

// GetId returns GetNoteNote.Id, and is useful for accessing the field via an interface.
func (v *GetNoteNote) GetId() int64 { return v.Id }

// GetTitle returns GetNoteNote.Title, and is useful for accessing the field via an interface.
func (v *GetNoteNote) GetTitle() string { return v.Title }

// GetContent returns GetNoteNote.Content, and is useful for accessing the field via an interface.
func (v *GetNoteNote) GetContent() string { return v.Content }

// GetCreated_date returns GetNoteNote.Created_date, and is useful for accessing the field via an interface.
func (v *GetNoteNote) GetCreated_date() time.Time { return v.Created_date }

// GetLast_edited_date returns GetNoteNote.Last_edited_date, and is useful for accessing the field via an interface.
func (v *GetNoteNote) GetLast_edited_date() time.Time { return v.Last_edited_date }

// GetTag_id returns GetNoteNote.Tag_id, and is useful for accessing the field via an interface.
func (v *GetNoteNote) GetTag_id() *int64 { return v.Tag_id }

// GetNoteResponse is returned by GetNote on success.
type GetNoteResponse struct {
	Note GetNoteNote `json:"Note"`
}

// GetNote returns GetNoteResponse.Note, and is useful for accessing the field via an interface.
func (v *GetNoteResponse) GetNote() GetNoteNote { return v.Note }

// GetNotesNotesNote includes the requested fields of the GraphQL type Note.
type GetNotesNotesNote struct {
	Id               int64     `json:"id"`
	Title            string    `json:"title"`
	Content          string    `json:"content"`
	Created_date     time.Time `json:"created_date"`
	Last_edited_date time.Time `json:"last_edited_date"`
	Tag_id           *int64    `json:"tag_id"`
}

// GetId returns GetNotesNotesNote.Id, and is useful for accessing the field via an interface.
func (v *GetNotesNotesNote) GetId() int64 { return v.Id }

// GetTitle returns GetNotesNotesNote.Title, and is useful for accessing the field via an interface.
func (v *GetNotesNotesNote) GetTitle() string { return v.Title }

// GetContent returns GetNotesNotesNote.Content, and is useful for accessing the field via an interface.
func (v *GetNotesNotesNote) GetContent() string { return v.Content }

// GetCreated_date returns GetNotesNotesNote.Created_date, and is useful for accessing the field via an interface.
func (v *GetNotesNotesNote) GetCreated_date() time.Time { return v.Created_date }

// GetLast_edited_date returns GetNotesNotesNote.Last_edited_date, and is useful for accessing the field via an interface.
func (v *GetNotesNotesNote) GetLast_edited_date() time.Time { return v.Last_edited_date }

// GetTag_id returns GetNotesNotesNote.Tag_id, and is useful for accessing the field via an interface.
func (v *GetNotesNotesNote) GetTag_id() *int64 { return v.Tag_id }

// GetNotesResponse is returned by GetNotes on success.
type GetNotesResponse struct {
	Notes []GetNotesNotesNote `json:"Notes"`
}

// GetNotes returns GetNotesResponse.Notes, and is useful for accessing the field via an interface.
func (v *GetNotesResponse) GetNotes() []GetNotesNotesNote { return v.Notes }

// GetTagResponse is returned by GetTag on success.
type GetTagResponse struct {
	Tag GetTagTag `json:"Tag"`
}

// GetTag returns GetTagResponse.Tag, and is useful for accessing the field via an interface.
func (v *GetTagResponse) GetTag() GetTagTag { return v.Tag }

// GetTagTag includes the requested fields of the GraphQL type Tag.
type GetTagTag struct {
	Id   int64  `json:"id"`
	Name string `json:"name"`
}

// GetId returns GetTagTag.Id, and is useful for accessing the field via an interface.
func (v *GetTagTag) GetId() int64 { return v.Id }

// GetName returns GetTagTag.Name, and is useful for accessing the field via an interface.
func (v *GetTagTag) GetName() string { return v.Name }

// GetTagsResponse is returned by GetTags on success.
type GetTagsResponse struct {
	Tags []GetTagsTagsTag `json:"Tags"`
}

// GetTags returns GetTagsResponse.Tags, and is useful for accessing the field via an interface.
func (v *GetTagsResponse) GetTags() []GetTagsTagsTag { return v.Tags }

// GetTagsTagsTag includes the requested fields of the GraphQL type Tag.
type GetTagsTagsTag struct {
	Id   int64  `json:"id"`
	Name string `json:"name"`
}

// GetId returns GetTagsTagsTag.Id, and is useful for accessing the field via an interface.
func (v *GetTagsTagsTag) GetId() int64 { return v.Id }

// GetName returns GetTagsTagsTag.Name, and is useful for accessing the field via an interface.
func (v *GetTagsTagsTag) GetName() string { return v.Name }

type Note_InputObject struct {
	Content          string    `json:"content"`
	Created_date     time.Time `json:"created_date"`
	Id               int64     `json:"id"`
	Last_edited_date time.Time `json:"last_edited_date"`
	Tag_id           *int64    `json:"tag_id"`
	Title            string    `json:"title"`
}

// GetContent returns Note_InputObject.Content, and is useful for accessing the field via an interface.
func (v *Note_InputObject) GetContent() string { return v.Content }

// GetCreated_date returns Note_InputObject.Created_date, and is useful for accessing the field via an interface.
func (v *Note_InputObject) GetCreated_date() time.Time { return v.Created_date }

// GetId returns Note_InputObject.Id, and is useful for accessing the field via an interface.
func (v *Note_InputObject) GetId() int64 { return v.Id }

// GetLast_edited_date returns Note_InputObject.Last_edited_date, and is useful for accessing the field via an interface.
func (v *Note_InputObject) GetLast_edited_date() time.Time { return v.Last_edited_date }

// GetTag_id returns Note_InputObject.Tag_id, and is useful for accessing the field via an interface.
func (v *Note_InputObject) GetTag_id() *int64 { return v.Tag_id }

// GetTitle returns Note_InputObject.Title, and is useful for accessing the field via an interface.
func (v *Note_InputObject) GetTitle() string { return v.Title }

// SaveNoteResponse is returned by SaveNote on success.
type SaveNoteResponse struct {
	SaveNote SaveNoteSaveNote `json:"SaveNote"`
}

// GetSaveNote returns SaveNoteResponse.SaveNote, and is useful for accessing the field via an interface.
func (v *SaveNoteResponse) GetSaveNote() SaveNoteSaveNote { return v.SaveNote }

// SaveNoteSaveNote includes the requested fields of the GraphQL type Note.
type SaveNoteSaveNote struct {
	Id               int64     `json:"id"`
	Title            string    `json:"title"`
	Content          string    `json:"content"`
	Created_date     time.Time `json:"created_date"`
	Last_edited_date time.Time `json:"last_edited_date"`
	Tag_id           *int64    `json:"tag_id"`
}

// GetId returns SaveNoteSaveNote.Id, and is useful for accessing the field via an interface.
func (v *SaveNoteSaveNote) GetId() int64 { return v.Id }

// GetTitle returns SaveNoteSaveNote.Title, and is useful for accessing the field via an interface.
func (v *SaveNoteSaveNote) GetTitle() string { return v.Title }

// GetContent returns SaveNoteSaveNote.Content, and is useful for accessing the field via an interface.
func (v *SaveNoteSaveNote) GetContent() string { return v.Content }

// GetCreated_date returns SaveNoteSaveNote.Created_date, and is useful for accessing the field via an interface.
func (v *SaveNoteSaveNote) GetCreated_date() time.Time { return v.Created_date }

// GetLast_edited_date returns SaveNoteSaveNote.Last_edited_date, and is useful for accessing the field via an interface.
func (v *SaveNoteSaveNote) GetLast_edited_date() time.Time { return v.Last_edited_date }

// GetTag_id returns SaveNoteSaveNote.Tag_id, and is useful for accessing the field via an interface.
func (v *SaveNoteSaveNote) GetTag_id() *int64 { return v.Tag_id }

// SetNoteTagResponse is returned by SetNoteTag on success.
type SetNoteTagResponse struct {
	SetNoteTag SetNoteTagSetNoteTagNote `json:"SetNoteTag"`
}

// GetSetNoteTag returns SetNoteTagResponse.SetNoteTag, and is useful for accessing the field via an interface.
func (v *SetNoteTagResponse) GetSetNoteTag() SetNoteTagSetNoteTagNote { return v.SetNoteTag }

// SetNoteTagSetNoteTagNote includes the requested fields of the GraphQL type Note.
type SetNoteTagSetNoteTagNote struct {
	Id               int64     `json:"id"`
	Title            string    `json:"title"`
	Content          string    `json:"content"`
	Created_date     time.Time `json:"created_date"`
	Last_edited_date time.Time `json:"last_edited_date"`
	Tag_id           *int64    `json:"tag_id"`
}

// GetId returns SetNoteTagSetNoteTagNote.Id, and is useful for accessing the field via an interface.
func (v *SetNoteTagSetNoteTagNote) GetId() int64 { return v.Id }

// GetTitle returns SetNoteTagSetNoteTagNote.Title, and is useful for accessing the field via an interface.
func (v *SetNoteTagSetNoteTagNote) GetTitle() string { return v.Title }

// GetContent returns SetNoteTagSetNoteTagNote.Content, and is useful for accessing the field via an interface.
func (v *SetNoteTagSetNoteTagNote) GetContent() string { return v.Content }

// GetCreated_date returns SetNoteTagSetNoteTagNote.Created_date, and is useful for accessing the field via an interface.
func (v *SetNoteTagSetNoteTagNote) GetCreated_date() time.Time { return v.Created_date }

// GetLast_edited_date returns SetNoteTagSetNoteTagNote.Last_edited_date, and is useful for accessing the field via an interface.
func (v *SetNoteTagSetNoteTagNote) GetLast_edited_date() time.Time { return v.Last_edited_date }

// GetTag_id returns SetNoteTagSetNoteTagNote.Tag_id, and is useful for accessing the field via an interface.
func (v *SetNoteTagSetNoteTagNote) GetTag_id() *int64 { return v.Tag_id }

// __CreateNoteInput is used internally by genqlient
type __CreateNoteInput struct {
	Title string `json:"title"`
	TagId *int64 `json:"tagId"`
}

// GetTitle returns __CreateNoteInput.Title, and is useful for accessing the field via an interface.
func (v *__CreateNoteInput) GetTitle() string { return v.Title }

// GetTagId returns __CreateNoteInput.TagId, and is useful for accessing the field via an interface.
func (v *__CreateNoteInput) GetTagId() *int64 { return v.TagId }

// __CreateTagInput is used internally by genqlient
type __CreateTagInput struct {
	Name string `json:"name"`
}

// GetName returns __CreateTagInput.Name, and is useful for accessing the field via an interface.
func (v *__CreateTagInput) GetName() string { return v.Name }

// __DeleteNoteInput is used internally by genqlient
type __DeleteNoteInput struct {
	Id int64 `json:"id"`
}

// GetId returns __DeleteNoteInput.Id, and is useful for accessing the field via an interface.
func (v *__DeleteNoteInput) GetId() int64 { return v.Id }

// __DeleteTagInput is used internally by genqlient
type __DeleteTagInput struct {
	Id int64 `json:"id"`
}

// GetId returns __DeleteTagInput.Id, and is useful for accessing the field via an interface.
func (v *__DeleteTagInput) GetId() int64 { return v.Id }

// __GetNoteInput is used internally by genqlient
type __GetNoteInput struct {
	NoteId int64 `json:"noteId"`
}

// GetNoteId returns __GetNoteInput.NoteId, and is useful for accessing the field via an interface.
func (v *__GetNoteInput) GetNoteId() int64 { return v.NoteId }

// __GetTagInput is used internally by genqlient
type __GetTagInput struct {
	TagId int64 `json:"tagId"`
}

// GetTagId returns __GetTagInput.TagId, and is useful for accessing the field via an interface.
func (v *__GetTagInput) GetTagId() int64 { return v.TagId }

// __SaveNoteInput is used internally by genqlient
type __SaveNoteInput struct {
	Note Note_InputObject `json:"note"`
}

// GetNote returns __SaveNoteInput.Note, and is useful for accessing the field via an interface.
func (v *__SaveNoteInput) GetNote() Note_InputObject { return v.Note }

// __SetNoteTagInput is used internally by genqlient
type __SetNoteTagInput struct {
	NoteId int64 `json:"noteId"`
	TagId  int64 `json:"tagId"`
}

// GetNoteId returns __SetNoteTagInput.NoteId, and is useful for accessing the field via an interface.
func (v *__SetNoteTagInput) GetNoteId() int64 { return v.NoteId }

// GetTagId returns __SetNoteTagInput.TagId, and is useful for accessing the field via an interface.
func (v *__SetNoteTagInput) GetTagId() int64 { return v.TagId }

func CreateNote(
	ctx context.Context,
	client graphql.Client,
	title string,
	tagId *int64,
) (*CreateNoteResponse, error) {
	req := &graphql.Request{
		OpName: "CreateNote",
		Query: `
mutation CreateNote ($title: string!, $tagId: int64) {
	CreateNote(title: $title, tag_id: $tagId) {
		id
		title
		content
		created_date
		last_edited_date
		tag_id
	}
}
`,
		Variables: &__CreateNoteInput{
			Title: title,
			TagId: tagId,
		},
	}
	var err error

	var data CreateNoteResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func CreateTag(
	ctx context.Context,
	client graphql.Client,
	name string,
) (*CreateTagResponse, error) {
	req := &graphql.Request{
		OpName: "CreateTag",
		Query: `
mutation CreateTag ($name: string!) {
	CreateTag(name: $name) {
		id
		name
	}
}
`,
		Variables: &__CreateTagInput{
			Name: name,
		},
	}
	var err error

	var data CreateTagResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func DeleteNote(
	ctx context.Context,
	client graphql.Client,
	id int64,
) (*DeleteNoteResponse, error) {
	req := &graphql.Request{
		OpName: "DeleteNote",
		Query: `
mutation DeleteNote ($id: int64!) {
	DeleteNote(id: $id)
}
`,
		Variables: &__DeleteNoteInput{
			Id: id,
		},
	}
	var err error

	var data DeleteNoteResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func DeleteTag(
	ctx context.Context,
	client graphql.Client,
	id int64,
) (*DeleteTagResponse, error) {
	req := &graphql.Request{
		OpName: "DeleteTag",
		Query: `
mutation DeleteTag ($id: int64!) {
	DeleteTag(id: $id)
}
`,
		Variables: &__DeleteTagInput{
			Id: id,
		},
	}
	var err error

	var data DeleteTagResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func GetNote(
	ctx context.Context,
	client graphql.Client,
	noteId int64,
) (*GetNoteResponse, error) {
	req := &graphql.Request{
		OpName: "GetNote",
		Query: `
query GetNote ($noteId: int64!) {
	Note(id: $noteId) {
		id
		title
		content
		created_date
		last_edited_date
		tag_id
	}
}
`,
		Variables: &__GetNoteInput{
			NoteId: noteId,
		},
	}
	var err error

	var data GetNoteResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func GetNotes(
	ctx context.Context,
	client graphql.Client,
) (*GetNotesResponse, error) {
	req := &graphql.Request{
		OpName: "GetNotes",
		Query: `
query GetNotes {
	Notes {
		id
		title
		content
		created_date
		last_edited_date
		tag_id
	}
}
`,
	}
	var err error

	var data GetNotesResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func GetTag(
	ctx context.Context,
	client graphql.Client,
	tagId int64,
) (*GetTagResponse, error) {
	req := &graphql.Request{
		OpName: "GetTag",
		Query: `
query GetTag ($tagId: int64!) {
	Tag(id: $tagId) {
		id
		name
	}
}
`,
		Variables: &__GetTagInput{
			TagId: tagId,
		},
	}
	var err error

	var data GetTagResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func GetTags(
	ctx context.Context,
	client graphql.Client,
) (*GetTagsResponse, error) {
	req := &graphql.Request{
		OpName: "GetTags",
		Query: `
query GetTags {
	Tags {
		id
		name
	}
}
`,
	}
	var err error

	var data GetTagsResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func SaveNote(
	ctx context.Context,
	client graphql.Client,
	note Note_InputObject,
) (*SaveNoteResponse, error) {
	req := &graphql.Request{
		OpName: "SaveNote",
		Query: `
mutation SaveNote ($note: Note_InputObject!) {
	SaveNote(note: $note) {
		id
		title
		content
		created_date
		last_edited_date
		tag_id
	}
}
`,
		Variables: &__SaveNoteInput{
			Note: note,
		},
	}
	var err error

	var data SaveNoteResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func SetNoteTag(
	ctx context.Context,
	client graphql.Client,
	noteId int64,
	tagId int64,
) (*SetNoteTagResponse, error) {
	req := &graphql.Request{
		OpName: "SetNoteTag",
		Query: `
mutation SetNoteTag ($noteId: int64!, $tagId: int64!) {
	SetNoteTag(note_id: $noteId, tag_id: $tagId) {
		id
		title
		content
		created_date
		last_edited_date
		tag_id
	}
}
`,
		Variables: &__SetNoteTagInput{
			NoteId: noteId,
			TagId:  tagId,
		},
	}
	var err error

	var data SetNoteTagResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}
